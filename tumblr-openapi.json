{
    "openapi": "3.0.0",
    "info": {
        "version": "",
        "title": "Tumblr",
        "description": "ntShare photos, mobile apps, and social network using Tumblr's API's.n    ",
        "termsOfService": ""
    },
    "servers": [
        "httpsapi.tumblr.com\/v2\/"
    ],
    "paths": {
        "\/blog\/{base-hostname}\/info": {
            "get": {
                "summary": "Get Blog Base Hostname Info",
                "description": "This method returns general information about the blog, such as the title, number of posts, and other high-level data.",
                "operationId": "BlogBaseHostnameInfoGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "base",
                        "in": "path",
                        "description": "The unique hostname of the blog."
                    }
                ]
            }
        },
        "\/blog\/{base-hostname}\/avatar\/{size}": {
            "get": {
                "summary": "Get Blog Base Hostname Avatar Size",
                "description": "Retrieves a blog's avatar in one of 9 different sizes.",
                "operationId": "BlogBaseHostnameAvatarSizeGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "base",
                        "in": "path",
                        "description": "The unique hostname of the blog."
                    },
                    {
                        "name": "size",
                        "in": "path",
                        "description": "The size of the avatar (square, one value for both length and width). Must be one of the values: 16, 24, 30, 40, 48, 64, 96, 128, 512"
                    }
                ]
            }
        },
        "\/blog\/{base-hostname}\/followers": {
            "get": {
                "summary": "Get Blog Base Hostname Followers",
                "description": "Retrieves a blog's followers.",
                "operationId": "BlogBaseHostnameFollowersGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of results to return: 1???20, inclusive"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Result to start at."
                    },
                    {
                        "name": "base",
                        "in": "path",
                        "description": "The unique hostname of the blog."
                    }
                ]
            }
        },
        "\/blog\/{base-hostname}\/posts\/{type}": {
            "get": {
                "summary": "Get Blog Base Hostname Adds Type",
                "description": "Retrieves published posts.",
                "operationId": "BlogBaseHostnamePostsTypeGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A specific post ID. Returns the single post specified or (if not found) a 404 error."
                    },
                    {
                        "name": "tag",
                        "in": "query",
                        "description": "Limits the response to posts with the specified tag"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of results to return: 1???20, inclusive"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Result to start at."
                    },
                    {
                        "name": "reblog_info",
                        "in": "query",
                        "description": "Indicates whether to return reblog information (specify true or false). Returns the various reblogged_ fields."
                    },
                    {
                        "name": "notes_info",
                        "in": "query",
                        "description": "Indicates whether to return notes information (specify true or false). Returns note count and note metadata."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Specifies the post format to return, other than HTML."
                    },
                    {
                        "name": "base",
                        "in": "path",
                        "description": "The unique hostname of the blog."
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of post to return. Specify one of the following:    text, quote, link, answer, video, audio, photo. By default, all types are returned"
                    }
                ]
            }
        },
        "\/blog\/{base-hostname}\/posts\/queue": {
            "get": {
                "summary": "Get Blog Base Hostname Adds Queue",
                "description": "Retrieves queued posts.",
                "operationId": "BlogBaseHostnamePostsQueueGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "base",
                        "in": "path",
                        "description": "The unique hostname of the blog."
                    }
                ]
            }
        },
        "\/blog\/{base-hostname}\/posts\/draft": {
            "get": {
                "summary": "Get Blog Base Hostname Adds Draft",
                "description": "Retrieves draft posts.",
                "operationId": "BlogBaseHostnamePostsDraftGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "base",
                        "in": "path",
                        "description": "The unique hostname of the blog."
                    }
                ]
            }
        },
        "\/blog\/{base-hostname}\/posts\/submission": {
            "get": {
                "summary": "Get Blog Base Hostname Adds Submission",
                "description": "Retrieves submission posts.",
                "operationId": "BlogBaseHostnamePostsSubmissionGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "base",
                        "in": "path",
                        "description": "The unique hostname of the blog."
                    }
                ]
            }
        },
        "\/blog\/{base-hostname}\/post": {
            "post": {
                "summary": "Add Blog Base Hostname Add",
                "description": "Creates a new video blog post.",
                "operationId": "BlogBaseHostnamePostPost",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of post to create."
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Comma-separated tags for this post."
                    },
                    {
                        "name": "tweet",
                        "in": "query",
                        "description": "Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "The GMT date and time of the post, as a string. Default is the date and time of the POST request."
                    },
                    {
                        "name": "markdown",
                        "in": "query",
                        "description": "Indicates whether the post uses markdown syntax."
                    },
                    {
                        "name": "caption",
                        "in": "query",
                        "description": "The user-supplied caption."
                    },
                    {
                        "name": "embed",
                        "in": "query",
                        "description": "HTML embed code for the video. Either the embed or data parameter is required."
                    },
                    {
                        "name": "data",
                        "in": "query",
                        "description": "A video file, as URL-encoded binary. Either the embed or data parameter is required."
                    },
                    {
                        "name": "base",
                        "in": "path",
                        "description": "The unique hostname of the blog."
                    }
                ]
            }
        },
        "\/blog\/{base-hostname}\/post\/edit": {
            "post": {
                "summary": "Add Blog Base Hostname Add Edit",
                "description": "Edits a blog post.",
                "operationId": "BlogBaseHostnamePostEditPost",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of post to create."
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Comma-separated tags for this post."
                    },
                    {
                        "name": "tweet",
                        "in": "query",
                        "description": "Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "The GMT date and time of the post, as a string. Default is the date and time of the POST request."
                    },
                    {
                        "name": "markdown",
                        "in": "query",
                        "description": "Indicates whether the post uses markdown syntax."
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A specific post ID. Returns the single post specified or (if not found) a 404 error."
                    },
                    {
                        "name": "base",
                        "in": "path",
                        "description": "The unique hostname of the blog."
                    }
                ]
            }
        },
        "\/blog\/{base-hostname}\/post\/reblog": {
            "post": {
                "summary": "Add Blog Base Hostname Add Reblog",
                "description": "Reblogs a post.",
                "operationId": "BlogBaseHostnamePostReblogPost",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of post to create."
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Comma-separated tags for this post."
                    },
                    {
                        "name": "tweet",
                        "in": "query",
                        "description": "Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "The GMT date and time of the post, as a string. Default is the date and time of the POST request."
                    },
                    {
                        "name": "markdown",
                        "in": "query",
                        "description": "Indicates whether the post uses markdown syntax."
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A specific post ID. Returns the single post specified or (if not found) a 404 error."
                    },
                    {
                        "name": "reblog_key",
                        "in": "query",
                        "description": "The reblog key for the reblogged post ??? get the reblog key with a \/posts request"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "A comment added to the reblogged post."
                    },
                    {
                        "name": "base",
                        "in": "path",
                        "description": "The unique hostname of the blog."
                    }
                ]
            }
        },
        "\/blog\/{base-hostname}\/post\/delete": {
            "post": {
                "summary": "Add Blog Base Hostname Add Delete",
                "description": "Deletes a post.",
                "operationId": "BlogBaseHostnamePostDeletePost",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A specific post ID. Returns the single post specified or (if not found) a 404 error."
                    },
                    {
                        "name": "base",
                        "in": "path",
                        "description": "The unique hostname of the blog."
                    }
                ]
            }
        },
        "\/user\/dashboard": {
            "get": {
                "summary": "Get User Dashboard",
                "description": "Use this method to retrieve the dashboard that matches the OAuth credentials submitted with the request.",
                "operationId": "UserDashboardGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of results to return: 1???20, inclusive"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Result to start at."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of post to create."
                    },
                    {
                        "name": "since_id",
                        "in": "query",
                        "description": "Return posts that have appeared after this ID. Use this parameter to page through the results: first get a set of posts, and then get posts since the last ID of the previous set."
                    }
                ]
            }
        },
        "\/user\/likes": {
            "get": {
                "summary": "Get User Likes",
                "description": "Use this method to retrieve the liked posts that match the OAuth credentials submitted with the request.",
                "operationId": "UserLikesGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of results to return: 1???20, inclusive"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Result to start at."
                    }
                ]
            }
        },
        "\/user\/following": {
            "get": {
                "summary": "Get User Following",
                "description": "Use this method to retrieve the blogs followed by the user whose OAuth credentials are submitted with the request.",
                "operationId": "UserFollowingGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of results to return: 1???20, inclusive"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Result to start at."
                    }
                ]
            }
        },
        "\/user\/follow": {
            "post": {
                "summary": "Add User Follow",
                "description": "Follow a blog.",
                "operationId": "UserFollowPost",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "url",
                        "in": "query",
                        "description": "The URL of the blog to follow."
                    }
                ]
            }
        },
        "\/user\/unfollow": {
            "post": {
                "summary": "Add User Unfollow",
                "description": "Unfollow a blog.",
                "operationId": "UserUnfollowPost",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "url",
                        "in": "query",
                        "description": "The URL of the blog to follow."
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": []
    }
}